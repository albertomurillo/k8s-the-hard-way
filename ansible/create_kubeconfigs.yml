---
- hosts: tag_worker
  connection: local
  gather_facts: False
  # Kubectl execution below creates a kubectl lock file this is why we have to
  # run the following tasks one by one.
  serial: 1
  tasks:
    - name: Get compute region
      shell: gcloud config get-value compute/region
      register: COMPUTE_REGION
      changed_when: false
      run_once: True

    - name: Get static ip address
      shell: >
        gcloud compute addresses describe kubernetes-the-hard-way
        --region {{ COMPUTE_REGION.stdout }}
        --format 'value(address)'
      register: KUBERNETES_PUBLIC_ADDRESS
      changed_when: false
      run_once: True

    - name: Create kubelet kubernetes configuration file
      shell: >
        kubectl config set-cluster kubernetes-the-hard-way
        --certificate-authority=certs/ca.pem
        --embed-certs=true
        --server=https://{{ KUBERNETES_PUBLIC_ADDRESS.stdout }}:6443
        --kubeconfig=files/{{ gce_name }}.kubeconfig &&
        kubectl config set-credentials system:node:{{ gce_name }}
        --client-certificate=certs/{{ gce_name }}.pem
        --client-key=certs/{{ gce_name }}-key.pem
        --embed-certs=true
        --kubeconfig=files/{{ gce_name }}.kubeconfig &&
        kubectl config set-context default
        --cluster=kubernetes-the-hard-way
        --user=system:node:{{ gce_name }}
        --kubeconfig=files/{{ gce_name }}.kubeconfig &&
        kubectl config use-context default --kubeconfig=files/{{ gce_name }}.kubeconfig
      args:
        creates: files/{{ gce_name }}.kubeconfig

    - name: Create kube-proxy kubernetes configuration file
      shell: >
        kubectl config set-cluster kubernetes-the-hard-way
        --certificate-authority=certs/ca.pem
        --embed-certs=true
        --server=https://{{ KUBERNETES_PUBLIC_ADDRESS.stdout }}:6443
        --kubeconfig=files/kube-proxy.kubeconfig &&
        kubectl config set-credentials kube-proxy
        --client-certificate=certs/kube-proxy.pem
        --client-key=certs/kube-proxy-key.pem
        --embed-certs=true
        --kubeconfig=files/kube-proxy.kubeconfig &&
        kubectl config set-context default
        --cluster=kubernetes-the-hard-way
        --user=kube-proxy
        --kubeconfig=files/kube-proxy.kubeconfig &&
        kubectl config use-context default --kubeconfig=files/kube-proxy.kubeconfig
      args:
        creates: files/kube-proxy.kubeconfig

- hosts: tag_worker
  tasks:
    - name: Copy kubernetes configuration files
      copy:
        src: "files/{{ item }}"
        dest: "{{ ansible_env.HOME }}"
      with_items:
        - "{{ gce_name }}.kubeconfig"
        - kube-proxy.kubeconfig
